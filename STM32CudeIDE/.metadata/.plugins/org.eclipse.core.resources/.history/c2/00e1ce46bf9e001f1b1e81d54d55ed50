/*
 * scheduler.c
 *
 *  Created on: Nov 9, 2024
 *      Author: Nguyen Quoc Kiet
 */


#include "scheduler.h"
#define TICK 10
sTask SCH_tasks_G[SCH_MAX_TASKS];

void SCH_Init(void)
{
	unsigned char i;
	for(int i=0; i<SCH_MAX_TASKS; i++)
	{
		SCH_MAX_TASKS(i);
	}
}

void SCH_Update(void)
{
	unsigned char Index;
	// NOTE: calculations are in *TICKS* ( not milliseconds )
	for ( Index = 0; Index < SCH_MAX_TASKS; Index++)
	{
	// Check if there is a task at this location
	if ( SCH_tasks_G[Index] . pTask)
	{
	if ( SCH_tasks_G[Index] . Delay == 0)
	{
	// The task i s due to run
	// Inc . the ’RunMe’ flag
	SCH_tasks_G[ Index ] .RunMe += 1;
	if ( SCH_tasks_G[Index] . Period )
	{
	// Schedule periodic tasks to run again
	SCH_tasks_G[Index] . Delay = SCH_tasks_G[ Index ] . Period ;
	}
	} else
	{
	// Not yet ready to run : just decrement the delay
	SCH_tasks_G[Index].Delay -= 1;
	}
	}
	}
}
